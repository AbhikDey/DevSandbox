<apex:component controller="SJM_AutoCompleteController">
    <!-- Attributes Required For Component -->
    <apex:attribute name="id" description="ID for the autocomplete control. This is required if same 'objectname' are to be used. Otherwise optional" type="String" required="false"/>
    <apex:attribute name="objectname" description="The object name you want to look for." type="String" required="false"/>
    <apex:attribute name="autocomplete_textbox" description="The class for the Autocomplete List Textbox." type="String" required="true"/>    
    <apex:attribute name="showAllContacts" description="Include all contacts (from all accounts) if value is true. Only useful when the objectName is 'Contact' " type="Boolean" required="false" default="false" />
    <apex:attribute name="showAcctAddress" description="Include all acctaddress if value is true" type="Boolean" required="false" default="false" />

    
    <!-- jQuery UI Stylesheet -->
    <apex:stylesheet value="{!URLFOR($Resource.autoCompleteAssets, 'jquery-ui.css')}"/> 
    <apex:stylesheet value="{!URLFOR($Resource.SLDS090, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
    <style>
        .ui-autocomplete-loading { 
        background: url('/img/loading.gif') right center no-repeat;
        }
        a.ui-corner-all{
        display: block;
        padding: 5px;
        border-radius: 0px !important;
        }
        li.ui-menu-item{
        padding:0px !important;
        }
    </style>
    
    <!-- JQuery Files -->
    <script src="{!URLFOR($Resource.autoCompleteAssets, 'jquery.min.js')}"/>
    <script src="{!URLFOR($Resource.autoCompleteAssets, 'jquery-ui.min.js')}"/>
        <script type='text/javascript'>
            var $j = jQuery.noConflict();
    $j(document).ready(function() {
        doLookUpSearch{! objectname }{! id }();
    });
    
    function doLookUpSearch{! objectname }{! id }(){
        var sObjects;
        var queryTerm;
        var inputId = esc{! objectname }{! id }('{!autocomplete_textbox}');
        var preFix = getPrefix{! objectname }(inputId);
        var objName = '{!objectname}';
        var showAllContacts = '{!showAllContacts}';
        var showAcctAddress = '{!showAcctAddress}';
        console.log("Input" + inputId);
        console.log("Prefix" + preFix );
        console.log("objName" + objName );
        
        $j('input[id$='+inputId+']').autocomplete({
            minLength: 2,
            source: function(request, response) {
                queryTerm = request.term;                         
                var accId = $j('#accountId').val();
                SJM_AutoCompleteController.findSObjects(objName, request.term, preFix, accId, showAllContacts, showAcctAddress, function(result, event){
                    if(event.type == 'exception') {
                        alert(event.message);
                    } else {
                        sObjects = result;
                        response(sObjects);
                    }
                });
            },
            focus: function( event, ui ) {
                var decodedString = decodeEntities(ui.item.Name);
                $j('input[id$='+inputId+']').val( decodedString );                    
                return false;
            }, 
            select: function( event, ui ) {
                var decodedString = decodeEntities(ui.item.Name);
                $j('input[id$='+inputId+']').val( decodedString );
                $j('input[id$='+inputId+'_lkid]').val( ui.item.Id );
                $j('input[id$='+inputId+'_lkold]').val( ui.item.Name );
                if('{!objectName}' == 'Account'){
                    $j('#accountId').val(ui.item.Id);    
                }
                $j('input[id$='+inputId+']').blur();
                return false;
            },
        })
        .data( 'autocomplete' )._renderItem = function( ul, item ) {
            var entry = '<a   href="#" role="option"><svg aria-hidden="true" class="slds-icon slds-icon--small"> <use xlink:href="{!URLFOR($Resource.SLDS090, 'assets/icons/standard-sprite/svg/symbols.svg#account')}"></use></svg>' + item.Name;
            var entry = '' ;
           if(item.Search_2__c != undefined && item.Search_2__c != ''){
              entry = '<a><b>'+ item.Search_2__c + '--' + item.Name + '</b>' + '-' + item.BillingStreet;
            }
            else if(item.BillingStreet != undefined && item.BillingStreet != '')
            {
              entry = '<a><b>' + item.Name + '</b>' + '-' + item.BillingStreet;  
            }
            else{
              entry = '<a><b>' + item.Name +'</b>';
            }
            entry = entry + '</a>';
            entry = entry.replace(queryTerm, '<b>' + queryTerm + '</b>');
            return $j( '<li  class="slds-lookup__item"></li>' )
            .data( 'item.autocomplete', item )
            .append( entry )
            .appendTo( ul );
        };
    }
    
    //Function that will extract actual id from salesforce generated id
    function esc{! objectname }{! id }(myid) {
        var extractedId = myid.substring(myid.lastIndexOf(':')+1);
        return extractedId;
    }
    
    function getPrefix{! objectname }(id){
        console.log('input[id$='+id+'_lktp]');
        var pFix =  $j('input[id$='+id+'_lktp]').val();
        return pFix;
    }
    
    function decodeEntities(encodedString) {
        var textArea = document.createElement('textarea');
        textArea.innerHTML = encodedString;
        return textArea.value;
    }
    
    </script>
</apex:component>